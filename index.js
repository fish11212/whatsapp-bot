const { Client, LocalAuth } = require('whatsapp-web.js');
const qrcode = require('qrcode-terminal');
const fs = require('fs');
const { google } = require('googleapis');
const creds = require('./service-account.json'); // —Ñ–∞–π–ª –∫–ª—é—á–∞ –æ—Ç Google

// –ó–∞–ø—É—Å–∫ –∫–ª–∏–µ–Ω—Ç–∞ WhatsApp
const client = new Client({
  authStrategy: new LocalAuth()
});

client.on('qr', qr => {
  qrcode.generate(qr, { small: true });
});

client.on('ready', () => {
  console.log('‚úÖ –ë–æ—Ç –≥–æ—Ç–æ–≤ –∫ –ø—Ä–∏—ë–º—É –∑–∞—è–≤–æ–∫!');
});

// –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π
client.on('message', async message => {
  if (!message.body) return;

  const text = message.body;

  const name = (text.match(/–§–ò–û[:\-]?\s*(.+)/i) || [])[1];
  const phone = (text.match(/–ù–æ–º–µ—Ä[:\-]?\s*(\d{10,})/i) || [])[1];
  const operator = (text.match(/–û–ø–µ—Ä–∞—Ç–æ—Ä[:\-]?\s*(.+)/i) || [])[1];
  const tariff = (text.match(/–¢–∞—Ä–∏—Ñ[:\-]?\s*(.+)/i) || [])[1];
  const status = (text.match(/–°—Ç–∞—Ç—É—Å[:\-]?\s*(.+)/i) || [])[1];

  const data = {
    name: name?.trim(),
    phone: phone?.trim(),
    operator: operator?.trim(),
    tariff: tariff?.trim(),
    status: status?.trim()
  };

  try {
    await addToSheet(data);
    await message.reply('‚úÖ –ó–∞—è–≤–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∞ –≤ —Ç–∞–±–ª–∏—Ü—É');
  } catch (err) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏:', err);
    await message.reply('‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –≤ —Ç–∞–±–ª–∏—Ü—É');
  }
});

// –§—É–Ω–∫—Ü–∏—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –≤ Google –¢–∞–±–ª–∏—Ü—É
async function addToSheet(data) {
  const auth = new google.auth.GoogleAuth({
    credentials: creds,
    scopes: ['https://www.googleapis.com/auth/spreadsheets'],
  });

  const sheets = google.sheets({ version: 'v4', auth });

  const values = [[
    new Date().toLocaleDateString('ru-RU'),        // A ‚Äî –¥–∞—Ç–∞
    data.name || "",                               // B ‚Äî –§–ò–û
    "",                                             // C
    data.phone || "–Ω–æ–≤—ã–π –Ω–æ–º–µ—Ä",                   // D ‚Äî –Ω–æ–º–µ—Ä
    "",                                             // E
    data.operator || "",                           // F ‚Äî –æ–ø–µ—Ä–∞—Ç–æ—Ä
    data.tariff || "",                             // G ‚Äî –æ–ø–∏—Å–∞–Ω–∏–µ —Ç–∞—Ä–∏—Ñ–∞
    "", "", "",                                     // H, I, J
    data.status || ""                              // K ‚Äî —Å—Ç–∞—Ç—É—Å
  ]];

  await sheets.spreadsheets.values.append({
    spreadsheetId: '1CnEdE5-ybQJ0LcMbYvqVPT3bj5tVsB8rqBihCBqkyFU', // –∑–∞–º–µ–Ω–∏ –Ω–∞ ID —Ç–≤–æ–µ–π —Ç–∞–±–ª–∏—Ü—ã
    range: '–õ–∏—Å—Ç1!A:K',
    valueInputOption: 'USER_ENTERED',
    requestBody: { values },
  });

  console.log("üìå –ó–∞—è–≤–∫–∞ —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω–∞:", values[0]);
}

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è
client.initialize();
